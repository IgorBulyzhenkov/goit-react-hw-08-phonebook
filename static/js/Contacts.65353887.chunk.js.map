{"version":3,"file":"static/js/Contacts.65353887.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Phonebook/Phonebook.module.css?7f86","redux/contacts/contacts-selector.js","components/Contacts/Phonebook/Phonebook.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactsList/ContactsList.module.css?f570","components/Contacts/ContactsList/ContactsList.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Container/Container.module.css?a34b","components/Contacts/Container/Container.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/FilterContacts/FilterContacts.module.css?a76f","components/Contacts/FilterContacts/FilterContacts.js","components/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contacts_text__Cijp1\",\"contacts\":\"Contacts_contacts__Eg+6p\",\"Loader\":\"Contacts_Loader__CaTYw\",\"container\":\"Contacts_container__SkTzd\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__oOblW\",\"label\":\"Phonebook_label__HXFH2\",\"input\":\"Phonebook_input__QHYKy\",\"btn\":\"Phonebook_btn__a-L0y\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getError = state => state.contacts.error;\nexport const getLoading = state => state.contacts.loading;\n\nconst sortContacts = createSelector(getContacts, contacts => {\n  const sorted = [...contacts]?.sort((a, b) => {\n    const aDate = Date.parse(a.createdAt);\n    const bDate = Date.parse(b.createdAt);\n    return bDate - aDate;\n  });\n  return sorted;\n});\n\nexport const getVisibleFilterContacts = createSelector(\n  sortContacts,\n  getFilter,\n  (contacts, filter) => {\n    const normalizeFilter = filter?.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact?.name?.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './Phonebook.module.css';\nimport { useState } from 'react';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport fetchApi from 'redux/contacts/contacts-operations';\nimport action from 'redux/contacts/contact-action';\n\nconst { reset: errorReset } = action;\nconst { addContacts } = fetchApi;\n\nexport default function Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const getFindContacts = userName => {\n    const userFind = contacts.find(({ name }) => name === userName);\n    return userFind?.name;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(errorReset());\n\n    const userName = e.target[0].value;\n    const findUser = getFindContacts(userName);\n\n    if (findUser) {\n      return Notify.warning(`${findUser} is already in contacts`);\n    }\n\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          <BsFillPersonPlusFill />\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__L53tp\",\"item\":\"ContactsList_item__+AkoV\",\"text\":\"ContactsList_text__9zcZT\",\"btn\":\"ContactsList_btn__PIYWN\",\"span\":\"ContactsList_span__1RB8A\"};","import { BsPersonSquare, BsTrashFill } from 'react-icons/bs';\nimport s from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getVisibleFilterContacts } from 'redux/contacts/contacts-selector';\nimport fetchApi from 'redux/contacts/contacts-operations';\n\nconst { deleteContacts } = fetchApi;\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const filterContacts = useSelector(state => getVisibleFilterContacts(state));\n\n  return (\n    <ul className={s.list}>\n      {filterContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={s.item}>\n            <span className={s.span}>\n              <BsPersonSquare />\n            </span>\n            <p className={s.text}>\n              {name} : {number}\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContacts(id));\n              }}\n            >\n              <BsTrashFill />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__SWx6O\",\"title\":\"Container_title__KzPBu\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Container;\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"FilterContacts_label__P7bh5\",\"input\":\"FilterContacts_input__Ot8WL\",\"span\":\"FilterContacts_span__e6h7l\"};","import { FiSearch } from 'react-icons/fi';\nimport s from './FilterContacts.module.css';\nimport action from 'redux/contacts/contact-action';\nimport { useDispatch } from 'react-redux';\n\nconst { filterContact } = action;\n\nconst FilterContacts = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          onChange={e => dispatch(filterContact(e.target.value))}\n          className={s.input}\n        />\n        <span className={s.span}>\n          <FiSearch color=\"black\" />\n        </span>\n      </label>\n    </>\n  );\n};\n\nexport default FilterContacts;\n","import s from './Contacts.module.css';\nimport { Oval } from 'react-loader-spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Phonebook from './Phonebook/Phonebook';\nimport ContactsList from './ContactsList/ContactsList';\nimport Container from './Container/Container';\nimport FilterContacts from './FilterContacts/FilterContacts';\nimport fetchApi from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nimport {\n  getContacts,\n  getLoading,\n} from '../../redux/contacts/contacts-selector';\n\nconst { fetchContacts } = fetchApi;\n\nfunction Contacts() {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.container}>\n      <Container title=\"Phonebook\">\n        <Phonebook />\n      </Container>\n\n      <Container title=\"Contacts\" className={s.contacts}>\n        {isLoading && (\n          <div className={s.Loader}>\n            <Oval\n              color=\"#1b181b\"\n              height={70}\n              width={70}\n              secondaryColor=\"grey\"\n            />\n          </div>\n        )}\n        {!contacts?.length && !isLoading ? (\n          <p className={s.text}> Sorry , there are no contacts here .</p>\n        ) : (\n          <>\n            {!contacts?.length ? null : <FilterContacts />}\n            <ContactsList />\n          </>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getLoading","loading","sortContacts","createSelector","sort","a","b","aDate","Date","parse","createdAt","getVisibleFilterContacts","filter","normalizeFilter","toLowerCase","contact","name","includes","errorReset","action","addContacts","fetchApi","Phonebook","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","onSubmit","e","preventDefault","findUser","userName","userFind","find","getFindContacts","Notify","className","s","type","pattern","title","required","onChange","deleteContacts","filterContacts","map","id","onClick","children","filterContact","color","fetchContacts","isLoading","useEffect","height","width","secondaryColor","length"],"sourceRoot":""}